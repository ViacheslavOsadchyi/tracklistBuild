{"version":3,"sources":["consts.js","actions/topTracks.js","reducers/topTracks.js","actions/artist.js","reducers/artist.js","reducers/index.js","components/TopTrackItem.js","components/LinearLoader.js","styles/topTracksStyles.js","components/imageLoadingController.js","components/TopTracks.js","components/TopTracksX.js","components/Tags.js","styles/artistStyles.js","components/Artist.js","components/ArtistX.js","App.js","serviceWorker.js","index.js"],"names":["apiKey","LOAD_TOP_TRACKS","getTopTracks","dispatch","fetch","concat","then","sauce","json","s","receivedTracks","tracks","track","type","initialState","loaded","LOAD_ARTIST_INFO","CLEAR_ARTIST_MODULE","getArtistInfo","artist","fetchArtistInfo","data","artistInfo","radioApp","combineReducers","topTracks","state","arguments","length","undefined","action","Object","objectSpread","TopTrackItem","_this$props","this","props","imgSrc","addImageHandler","_this$props2","name","artistName","artistUrl","loadImageHandler","classes","react_default","a","createElement","ListItem_default","alignItems","ListItemAvatar_default","Avatar_default","src","onLoad","className","avatarPic","Audiotrack_default","fontSize","ListItemText_default","primary","secondary","Link_default","component","Link","to","split","join","ListItemSecondaryAction_default","Tooltip_default","title","placement","IconButton_default","href","aria-label","Person_default","Component","withStyles","theme","width","height","LinearLoader","style","wrapperStyle","Typography_default","LinearProgress_default","topTracksStyles","topTracksArea","maxWidth","margin","trackList","backgroundColor","palette","background","paper","spacing","unit","spinnerWrapper","padding","textAlign","imageLoadingController","WrappedComponent","_Component","_class","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","imagesExists","imagesLoaded","handleAddImage","bind","assertThisInitialized","handleLoadImage","inherits","createClass","key","value","setState","newProps","TopTracks","getTracksHandler","variant","visibility","List_default","map","i","image","_track$artist","itemProps","url","components_TopTrackItem","assign","TopTracksX","connect","_state$topTracks","Tags","tags","Bookmark_default","display","verticalAlign","color","tag","Button_default","artistStyles","cardWrapper","defineProperty","breakpoints","down","card","flexDirection","media","flex","content","cardContentHeader","justifyContent","marginBottom","breadCrumbs","order","Artist","getArtistInfoHandler","artistUrlName","window","scrollTo","clearArtistModule","_this$props2$artistIn","bioSummary","bio","summary","Card_default","alt","CardContent_default","gutterBottom","dangerouslySetInnerHTML","__html","CardActions_default","components_Tags","_this$props3","Paper_default","renderCard","ArtistX","ownProps","_state$artist","match","params","store","createStore","applyMiddleware","logger","thunk","App","react_redux_es","react_router_dom","react_router","path","exact","Boolean","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"0UAAaA,EAAS,mCCQTC,EAAkB,kBAiBxB,SAASC,IACZ,OAAO,SAAAC,GAAQ,OAfRC,MAAK,uEAAAC,OAAwEL,EAAxE,iBAewBM,KAChC,SAAAC,GAAK,OAAIA,EAAMC,OAAOF,KAAK,SAACG,GAAM,IAGfC,EAEXD,EAHAE,OACIC,MAGRT,EAdD,CACHU,KAAMZ,EACNU,OAY2BD,SC/BnC,IAAMI,EAAe,CACjBH,OAAQ,GACRI,QAAQ,GCIL,IAAMC,EAAmB,mBACnBC,EAAsB,sBAuB5B,SAASC,EAAcC,GAC1B,OAAO,SAAAhB,GAAQ,OAtBnB,SAAyBgB,GACrB,OAAOf,MAAK,kEAAAC,OAAmEc,EAAnE,aAAAd,OAAqFL,EAArF,iBAqBOoB,CAAgBD,GAAQb,KACvC,SAAAC,GAAK,OAAIA,EAAMC,OAAOF,KAAK,SAACG,GAf7B,IAAwBY,EAgBnBlB,GAhBmBkB,EAgBKZ,EAAEU,OAf3B,CACHN,KAAMG,EACNK,eCjBR,IAAMP,EAAe,CACjBQ,WAAY,KACZP,QAAQ,GCHZ,IAKeQ,EALEC,YAAgB,CAC7BC,UHEW,WAAkD,IAA9BC,EAA8BC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAtBb,EAAcgB,EAAQH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAC7D,OAAQC,EAAOjB,MACX,KAAKZ,EACD,OAAO8B,OAAAC,EAAA,EAAAD,CAAA,GACAL,EADP,CAEIf,OAAQmB,EAAOnB,OACfI,QAAQ,IAEhB,QACI,OAAOW,IGVfP,ODIW,WAA+C,IAA9BO,EAA8BC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAtBb,EAAcgB,EAAQH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAC1D,OAAQC,EAAOjB,MACX,KAAKI,EACD,OAAOH,EACX,KAAKE,EACD,OAAOe,OAAAC,EAAA,EAAAD,CAAA,GACAL,EADP,CAEIJ,WAAYQ,EAAOT,KACnBN,QAAQ,IAEhB,QACI,OAAOW,mOEAbO,+LACkB,IAAAC,EAIdC,KAAKC,MAFPC,EAFgBH,EAEhBG,OACAC,EAHgBJ,EAGhBI,gBAGED,GACFC,qCAIK,IAAAC,EAQHJ,KAAKC,MANPI,EAFKD,EAELC,KACAC,EAHKF,EAGLE,WACAC,EAJKH,EAILG,UACAL,EALKE,EAKLF,OACAM,EANKJ,EAMLI,iBACAC,EAPKL,EAOLK,QAGF,OACEC,EAAAC,EAAAC,cAACC,EAAAF,EAAD,CAAUG,WAAW,UACjBJ,EAAAC,EAAAC,cAACG,EAAAJ,EAAD,KAEQT,EACIQ,EAAAC,EAAAC,cAACI,EAAAL,EAAD,CAAQM,IAAKf,EAAQgB,OAAQV,EAAkBW,UAAWV,EAAQW,YAElEV,EAAAC,EAAAC,cAACI,EAAAL,EAAD,CAAQQ,UAAWV,EAAQW,WACvBV,EAAAC,EAAAC,cAACS,EAAAV,EAAD,CAAgBW,SAAS,YAKzCZ,EAAAC,EAAAC,cAACW,EAAAZ,EAAD,CACIa,QAASnB,EACToB,UACIf,EAAAC,EAAAC,cAAA,mBACQF,EAAAC,EAAAC,cAACc,EAAAf,EAAD,CAASgB,UAAWC,IAAMC,GAAE,WAAA3D,OAAaoC,EAAWwB,MAAM,KAAKC,KAAK,OAASzB,MAI7FI,EAAAC,EAAAC,cAACoB,EAAArB,EAAD,KACED,EAAAC,EAAAC,cAACqB,EAAAtB,EAAD,CAASuB,MAAM,yBAAyBC,UAAU,QAChDzB,EAAAC,EAAAC,cAACwB,EAAAzB,EAAD,CAAY0B,KAAM9B,EAAW+B,aAAW,UACtC5B,EAAAC,EAAAC,cAAC2B,EAAA5B,EAAD,iBA9CS6B,aAuDVC,wBA9DF,SAAAC,GAAK,MAAK,CACrBtB,UAAW,CACPuB,MAAO,OACPC,OAAQ,UA2DCH,CAAmB3C,wBCxErB,SAAS+C,GAAc5C,GAClC,OACIS,EAAAC,EAAAC,cAAA,OAAKkC,MAAO7C,EAAM8C,cACdrC,EAAAC,EAAAC,cAACoC,EAAArC,EAAD,CAAYgB,UAAU,KAAtB,eAGAjB,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAACqC,GAAAtC,EAAD,OCVZ,IAiBeuC,GAjBS,SAAAR,GAAK,MAAK,CAC9BS,cAAe,CACXC,SAAU,QACVC,OAAQ,QAEZC,UAAW,CACPC,gBAAiBb,EAAMc,QAAQC,WAAWC,OAE9CxB,MAAO,CACHmB,OAAM,GAAAnF,OAA0B,EAArBwE,EAAMiB,QAAQC,KAAnB,SAAA1F,OAAwD,EAArBwE,EAAMiB,QAAQC,KAAjD,OAEVC,eAAgB,CACZC,QAAS,OACTC,UAAW,qBCgCJC,OA5Cf,SAAgCC,GAC5B,gBAAAC,GACI,SAAAC,EAAYlE,GAAO,IAAAmE,EAAA,OAAAxE,OAAAyE,EAAA,EAAAzE,CAAAI,KAAAmE,IACfC,EAAAxE,OAAA0E,EAAA,EAAA1E,CAAAI,KAAAJ,OAAA2E,EAAA,EAAA3E,CAAAuE,GAAAK,KAAAxE,KAAMC,KACDwE,aAAe,EACpBL,EAAKM,aAAe,EACpBN,EAAKO,eAAiBP,EAAKO,eAAeC,KAApBhF,OAAAiF,GAAA,EAAAjF,CAAAwE,IACtBA,EAAKU,gBAAkBV,EAAKU,gBAAgBF,KAArBhF,OAAAiF,GAAA,EAAAjF,CAAAwE,IACvBA,EAAK7E,MAAQ,CACTX,QAAS,GAPEwF,EADvB,OAAAxE,OAAAmF,EAAA,EAAAnF,CAAAuE,EAAAD,GAAAtE,OAAAoF,EAAA,EAAApF,CAAAuE,EAAA,EAAAc,IAAA,iBAAAC,MAAA,WAaQlF,KAAKyE,iBAbb,CAAAQ,IAAA,kBAAAC,MAAA,WAiBQlF,KAAK0E,eAED1E,KAAK0E,eAAiB1E,KAAKyE,cAC3BzE,KAAKmF,SAAS,CACVvG,QAAQ,MArBxB,CAAAqG,IAAA,SAAAC,MAAA,WA0Ba,IAEDtG,EACAoB,KAAKT,MADLX,OAGEwG,EAAQxF,OAAAC,EAAA,EAAAD,CAAA,GACPI,KAAKC,MADE,CAEVyE,aAAc9F,EACduB,gBAAiBH,KAAK2E,eACtBnE,iBAAkBR,KAAK8E,kBAG3B,OAAQpE,EAAAC,EAAAC,cAACqD,EAAqBmB,OAtCtCjB,EAAA,CAAqB3B,cCMnB6C,+LACkB,IAAAtF,EAIZC,KAAKC,MAFLrB,EAFYmB,EAEZnB,OACA0G,EAHYvF,EAGZuF,iBAGC1G,GACH0G,qCAIG,IAAAlF,EAQHJ,KAAKC,MANPzB,EAFK4B,EAEL5B,OACAI,EAHKwB,EAGLxB,OACA6B,EAJKL,EAILK,QACAN,EALKC,EAKLD,gBACAK,EANKJ,EAMLI,iBACAkE,EAPKtE,EAOLsE,aAGF,OACEhE,EAAAC,EAAAC,cAAA,OAAKO,UAAWV,EAAQ0C,eACtBzC,EAAAC,EAAAC,cAACoC,EAAArC,EAAD,CAAY4E,QAAQ,KAAKpE,UAAWV,EAAQyB,OAA5C,gBAIItD,IAAW8F,IACXhE,EAAAC,EAAAC,cAAA,OAAKO,UAAWV,EAAQ6C,WACtB5C,EAAAC,EAAAC,cAACiC,GAAD,CAAcE,aAAc,CAACe,QAAS,WAK1ClF,GACE8B,EAAAC,EAAAC,cAAA,OAAKO,UAAWV,EAAQ6C,UAAWR,MAAO,CAAC0C,WAAYd,EAAe,UAAY,WAChFhE,EAAAC,EAAAC,cAAC6E,EAAA9E,EAAD,KACGnC,EAAOkH,IAAI,SAACjH,EAAOkH,GAAM,IAEtBtF,EAME5B,EANF4B,KACAuF,EAKEnH,EALFmH,MAHsBC,EAQpBpH,EAJFO,OAMI8G,EAAY,CAChBzF,OACAC,WAZsBuF,EAKpBxF,KAQFE,UAbsBsF,EAMpBE,IAQF7F,OALa0F,GAASA,EAAM,IAAMA,EAAM,GAAG,SAAWA,EAAM,GAAG,SAAW,MAO5E,OAAQlF,EAAAC,EAAAC,cAACoF,GAADpG,OAAAqG,OAAA,CACNhB,IAAKU,EACLxF,gBAAiBA,EACjBK,iBAAkBA,GACdsF,gBA1DFtD,aAqEPC,wBAAWS,GAAXT,CAA4BuB,GAAuBqB,KC7CrDa,GALIC,YAtBK,SAAA5G,GAAS,IAAA6G,EAMzB7G,EAJAD,UAMJ,MAAO,CACHd,OATyB4H,EAGrB5H,OAOJI,OAVyBwH,EAIrBxH,SAUe,SAAAZ,GACvB,MAAO,CACHsH,iBAAkB,WACdtH,EAASD,QAKFoI,CAGjBd,gICCagB,OA5Bf,SAAepG,GAAO,IAEdqG,EACArG,EADAqG,KAGJ,OACI5F,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAC2F,GAAA5F,EAAD,CAAcmC,MAAO,CACjB0D,QAAS,eACTC,cAAe,SACfC,MAAO,aAEVJ,EAAKZ,IAAI,SAACiB,GAAQ,IAEXtG,EAEAsG,EAFAtG,KACA0F,EACAY,EADAZ,IAGJ,OACIrF,EAAAC,EAAAC,cAACgG,GAAAjG,EAAD,CAAQsE,IAAK5E,EAAMgC,KAAM0D,GACpB1F,gBCoBVwG,GA3CM,SAAAnE,GAAK,MAAK,CAC3BoE,YAAYlH,OAAAmH,GAAA,EAAAnH,CAAA,GACP8C,EAAMsE,YAAYC,KAAK,MAAQ,CAC5B7D,SAAU,QACVC,OAAQ,SAGhB6D,KAAKtH,OAAAmH,GAAA,EAAAnH,CAAA,CACD4G,QAAS,QACR9D,EAAMsE,YAAYC,KAAK,MAAQ,CAC5BE,cAAe,WAGvBC,MAAO,CACHC,KAAM,YAEVC,QAAS,CACLd,QAAS,OACTW,cAAe,UAEnBI,kBAAkB3H,OAAAmH,GAAA,EAAAnH,CAAA,CACd4G,QAAS,OACTgB,eAAgB,gBAChB1G,WAAY,aACZ2G,aAAc,QACb/E,EAAMsE,YAAYC,KAAK,MAAQ,CAC5BE,cAAe,SACfM,aAAc,SAGtBC,YAAY9H,OAAAmH,GAAA,EAAAnH,CAAA,GACP8C,EAAMsE,YAAYC,KAAK,MAAQ,CAC5BU,MAAO,IACPF,aAAc,SAGtBvF,MAAMtC,OAAAmH,GAAA,EAAAnH,CAAA,GACD8C,EAAMsE,YAAYC,KAAK,MAAQ,CAC5BU,MAAO,QCzBbC,+LACkB,IAAA7H,EAKZC,KAAKC,MAHL4H,EAFY9H,EAEZ8H,qBACAC,EAHY/H,EAGZ+H,cACA3H,EAJYJ,EAIZI,gBAEJ0H,EAAqBC,GACrBC,OAAOC,SAAS,EAAE,GAClB7H,oDAQA8H,EAFIjI,KAAKC,MADLgI,0DAMK,IAAA7H,EAaLJ,KAAKC,MAbAiI,EAAA9H,EAELjB,WACIkB,EAHC6H,EAGD7H,KAEa8H,EALZD,EAIDE,IACIC,QAEJzC,EAPCsC,EAODtC,MACAU,EARC4B,EAQD5B,KAEJ7F,EAVKL,EAULK,QACAD,EAXKJ,EAWLI,iBACAkE,EAZKtE,EAYLsE,aAGJ,OACIhE,EAAAC,EAAAC,cAAC0H,GAAA3H,EAAD,CAAMQ,UAAWV,EAAQyG,KAAMpE,MAAO,CAAC0C,WAAad,EAAe,UAAY,WAC3EhE,EAAAC,EAAAC,cAAA,OAAKO,UAAWV,EAAQ2G,OACpB1G,EAAAC,EAAAC,cAAA,OACIK,IAAK2E,EAAM,GAAG,SACd9C,MAAO,CAACH,MAAO,QAASC,OAAQ,QAAS4D,QAAS,SAClDtF,OAAQV,EACR+H,IAAI,eAGZ7H,EAAAC,EAAAC,cAAA,OAAKO,UAAWV,EAAQ6G,SACpB5G,EAAAC,EAAAC,cAAC4H,GAAA7H,EAAD,KACID,EAAAC,EAAAC,cAAA,OAAKO,UAAWV,EAAQ8G,mBACpB7G,EAAAC,EAAAC,cAACoC,EAAArC,EAAD,CAAY8H,cAAY,EAAClD,QAAQ,KAAK5D,UAAU,KAAKR,UAAWV,EAAQyB,OACnE7B,GAELK,EAAAC,EAAAC,cAAA,OAAKO,UAAWV,EAAQiH,aACpBhH,EAAAC,EAAAC,cAACc,EAAAf,EAAD,CAASgB,UAAWC,IAAMC,GAAG,KAA7B,QACAnB,EAAAC,EAAAC,cAAA,QAAM8H,wBAAyB,CAAEC,OAAM,UAAAzK,OAAYmC,QAG3DK,EAAAC,EAAAC,cAACoC,EAAArC,EAAD,CAAYgB,UAAU,IAAI+G,wBAAyB,CAAEC,OAAQR,MAEjEzH,EAAAC,EAAAC,cAACgI,GAAAjI,EAAD,KACK2F,GAAQA,EAAKK,KAAOjG,EAAAC,EAAAC,cAACiI,GAAD,CAAMvC,KAAMA,EAAKK,0CAOjD,IAAAmC,EAKD9I,KAAKC,MAHLrB,EAFCkK,EAEDlK,OACA8F,EAHCoE,EAGDpE,aACAjE,EAJCqI,EAIDrI,QAGN,OACEC,EAAAC,EAAAC,cAAA,OAAKO,UAAWV,EAAQqG,eAEdlI,IAAW8F,IACThE,EAAAC,EAAAC,cAACmI,GAAApI,EAAD,KACID,EAAAC,EAAAC,cAACiC,GAAD,CAAcE,aAAc,CAACe,QAAS,WAK9ClF,GAAUoB,KAAKgJ,qBAnFVxG,aA0FJC,wBAAWoE,GAAXpE,CAAyBuB,GAAuB4D,KCjElDqB,GALC9C,YA3BQ,SAAC5G,EAAO2J,GAAa,IAAAC,EAMrC5J,EAJAP,OACIG,EAHiCgK,EAGjChK,WACAP,EAJiCuK,EAIjCvK,OAOR,MAAO,CACHkJ,cAHAoB,EAASE,MAAMC,OADfhJ,KAKAlB,aACAP,WAImB,SAAAZ,GACvB,MAAO,CACH6J,qBAAsB,SAAC7I,GACnBhB,EAASe,EAAcC,KAE3BiJ,kBAAmB,WAAOjK,EZHvB,CACHU,KAAMI,OYMEqH,CAGdyB,ICzBI0B,GAAQC,YACZnK,EACAoK,YAAgBC,IAAQC,MAmBXC,oLAbX,OACEjJ,EAAAC,EAAAC,cAACgJ,EAAA,EAAD,CAAUN,MAAOA,IACf5I,EAAAC,EAAAC,cAACiJ,EAAA,EAAD,KACEnJ,EAAAC,EAAAC,cAAA,OAAKO,UAAU,OACbT,EAAAC,EAAAC,cAACkJ,EAAA,EAAD,CAAOC,KAAK,IAAIC,OAAK,EAACrI,UAAWuE,KACjCxF,EAAAC,EAAAC,cAACkJ,EAAA,EAAD,CAAOC,KAAK,gBAAgBpI,UAAWsH,eARjCzG,aCLEyH,QACW,cAA7BlC,OAAOmC,SAASC,UAEe,UAA7BpC,OAAOmC,SAASC,UAEhBpC,OAAOmC,SAASC,SAASf,MACvB,2DCZNgB,IAASC,OAAO3J,EAAAC,EAAAC,cAAC0J,GAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMxM,KAAK,SAAAyM,GACjCA,EAAaC","file":"static/js/main.58d2e993.chunk.js","sourcesContent":["export const apiKey = '69b3edcf42aa316a4ee793922c9d1d56';","import {\r\n    apiKey,\r\n} from '../consts';\r\n\r\n/*\r\n * action types\r\n */\r\n\r\nexport const LOAD_TOP_TRACKS = 'LOAD_TOP_TRACKS';\r\n\r\nfunction fetchTopTracks() {\r\n    return fetch(`http://ws.audioscrobbler.com/2.0/?method=chart.gettoptracks&api_key=${apiKey}&format=json`);\r\n}\r\n\r\n/*\r\n * action creators\r\n */\r\n\r\nexport function loadTopTracks(tracks) {\r\n    return {\r\n        type: LOAD_TOP_TRACKS,\r\n        tracks: tracks,\r\n    }\r\n}\r\n\r\nexport function getTopTracks() {\r\n    return dispatch => fetchTopTracks().then(\r\n        sauce => sauce.json().then((s) => {\r\n            const {\r\n                tracks: {\r\n                    track: receivedTracks\r\n                }\r\n            } = s;\r\n            dispatch(loadTopTracks(receivedTracks));\r\n        }),\r\n        // error => dispatch(loadTopTracks(['1','2']))\r\n    );\r\n}","import {LOAD_TOP_TRACKS} from '../actions/topTracks';\r\n\r\nconst initialState = {\r\n    tracks: [],\r\n    loaded: false,\r\n};\r\n\r\nexport default function topTracks (state = initialState, action) {\r\n    switch (action.type) {\r\n        case LOAD_TOP_TRACKS:\r\n            return {\r\n                ...state,\r\n                tracks: action.tracks,\r\n                loaded: true,\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import {\r\n    apiKey,\r\n} from '../consts';\r\n\r\n/*\r\n * action types\r\n */\r\n\r\nexport const LOAD_ARTIST_INFO = 'LOAD_ARTIST_INFO';\r\nexport const CLEAR_ARTIST_MODULE = 'CLEAR_ARTIST_MODULE';\r\n\r\nfunction fetchArtistInfo(artist) {\r\n    return fetch(`http://ws.audioscrobbler.com/2.0/?method=artist.getinfo&artist=${artist}&api_key=${apiKey}&format=json`);\r\n}\r\n\r\n/*\r\n * action creators\r\n */\r\n\r\nexport function loadArtistInfo(data) {\r\n    return {\r\n        type: LOAD_ARTIST_INFO,\r\n        data,\r\n    }\r\n}\r\n\r\nexport function clearArtistModule() {\r\n    return {\r\n        type: CLEAR_ARTIST_MODULE\r\n    }\r\n}\r\n\r\nexport function getArtistInfo(artist) {\r\n    return dispatch => fetchArtistInfo(artist).then(\r\n        sauce => sauce.json().then((s) => {          \r\n            dispatch(loadArtistInfo(s.artist));\r\n        }),\r\n        // error => dispatch(loadTopTracks(['1','2']))\r\n    );\r\n}","import {\r\n    LOAD_ARTIST_INFO,\r\n    CLEAR_ARTIST_MODULE,\r\n} from '../actions/artist';\r\n\r\nconst initialState = {\r\n    artistInfo: null,\r\n    loaded: false,\r\n};\r\n\r\nexport default function artist (state = initialState, action) {\r\n    switch (action.type) {\r\n        case CLEAR_ARTIST_MODULE:\r\n            return initialState;\r\n        case LOAD_ARTIST_INFO:\r\n            return {\r\n                ...state,\r\n                artistInfo: action.data,\r\n                loaded: true,\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import { combineReducers } from 'redux';\r\nimport topTracks from './topTracks';\r\nimport artist from './artist';\r\n\r\nconst radioApp = combineReducers({\r\n    topTracks,\r\n    artist,\r\n})\r\n\r\nexport default radioApp;","import React, { Component } from 'react';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MUILink from '@material-ui/core/Link';\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport AudiotrackIcon from '@material-ui/icons/Audiotrack';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst styles = theme => ({\r\n    avatarPic: {\r\n        width: '80px',\r\n        height: '80px',\r\n    }\r\n  });\r\n\r\nclass TopTrackItem extends Component {\r\n    componentDidMount() {\r\n      const {\r\n        imgSrc,\r\n        addImageHandler,\r\n      } = this.props;\r\n\r\n      if (imgSrc) {\r\n        addImageHandler();\r\n      }\r\n    }\r\n\r\n    render() {\r\n      const {\r\n        name,\r\n        artistName,\r\n        artistUrl,\r\n        imgSrc,\r\n        loadImageHandler,\r\n        classes\r\n      } = this.props;\r\n\r\n      return (\r\n        <ListItem alignItems=\"center\">\r\n            <ListItemAvatar>\r\n                {\r\n                    imgSrc ? (\r\n                        <Avatar src={imgSrc} onLoad={loadImageHandler} className={classes.avatarPic} />\r\n                    ) : (\r\n                        <Avatar className={classes.avatarPic}>\r\n                            <AudiotrackIcon fontSize='large' />\r\n                        </Avatar>\r\n                    )\r\n                }\r\n            </ListItemAvatar>\r\n            <ListItemText\r\n                primary={name}\r\n                secondary={\r\n                    <span>\r\n                        by: <MUILink component={Link} to={`/artist/${artistName.split(' ').join('+')}`}>{artistName}</MUILink>\r\n                    </span>\r\n                }\r\n            />\r\n            <ListItemSecondaryAction>\r\n              <Tooltip title=\"Go to artist info page\" placement=\"left\">\r\n                <IconButton href={artistUrl} aria-label=\"Person\">\r\n                  <PersonIcon />\r\n                </IconButton>\r\n              </Tooltip>\r\n            </ListItemSecondaryAction>\r\n        </ListItem>\r\n      );\r\n    }\r\n  }\r\n  \r\n  export default withStyles(styles)(TopTrackItem);","import React from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\n\r\nexport default function LinearLoader (props) {\r\n    return (\r\n        <div style={props.wrapperStyle}>\r\n            <Typography component=\"p\">\r\n                Loading ...\r\n            </Typography>\r\n            <br />\r\n            <LinearProgress />\r\n        </div>\r\n    );\r\n}","\r\nconst topTracksStyles = theme => ({\r\n    topTracksArea: {\r\n        maxWidth: '600px',\r\n        margin: 'auto',\r\n    },\r\n    trackList: {\r\n        backgroundColor: theme.palette.background.paper\r\n    },\r\n    title: {\r\n        margin: `${theme.spacing.unit * 2}px 0 ${theme.spacing.unit * 2}px`,\r\n    },\r\n    spinnerWrapper: {\r\n        padding: '10px',\r\n        textAlign: 'center'\r\n    }\r\n});\r\n\r\nexport default topTracksStyles;","import React, { Component } from 'react';\r\n\r\nfunction imageLoadingController(WrappedComponent) {\r\n    return class extends Component {\r\n        constructor(props) {\r\n            super(props);\r\n            this.imagesExists = 0;\r\n            this.imagesLoaded = 0;\r\n            this.handleAddImage = this.handleAddImage.bind(this);\r\n            this.handleLoadImage = this.handleLoadImage.bind(this);\r\n            this.state = {\r\n                loaded : false,\r\n            }\r\n        }\r\n\r\n        handleAddImage() {\r\n            this.imagesExists ++;\r\n        }\r\n\r\n        handleLoadImage() {\r\n            this.imagesLoaded ++;\r\n\r\n            if (this.imagesLoaded === this.imagesExists) {\r\n                this.setState({\r\n                    loaded: true,\r\n                });\r\n            }\r\n        }\r\n\r\n        render() {\r\n            const {\r\n                loaded,\r\n            } = this.state;\r\n\r\n            const newProps = {\r\n                ...this.props,\r\n                imagesLoaded: loaded,\r\n                addImageHandler: this.handleAddImage,\r\n                loadImageHandler: this.handleLoadImage,\r\n            }\r\n\r\n            return (<WrappedComponent {...newProps} />);\r\n        }\r\n    }\r\n}\r\n\r\nexport default imageLoadingController;","import React, { Component } from 'react';\r\nimport List from '@material-ui/core/List';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport TopTrackItem from './TopTrackItem';\r\nimport LinearLoader from './LinearLoader';\r\nimport topTracksStyles from '../styles/topTracksStyles';\r\nimport imageLoadingController from './imageLoadingController';\r\n\r\nclass TopTracks extends Component {\r\n    componentDidMount() {\r\n        const {\r\n            loaded,\r\n            getTracksHandler,\r\n        } = this.props;\r\n\r\n        if (!loaded) {\r\n          getTracksHandler();\r\n        }\r\n    }\r\n\r\n    render() {\r\n      const {\r\n        tracks,\r\n        loaded,\r\n        classes,\r\n        addImageHandler,\r\n        loadImageHandler,\r\n        imagesLoaded,\r\n      } = this.props;\r\n\r\n      return (\r\n        <div className={classes.topTracksArea}>\r\n          <Typography variant=\"h5\" className={classes.title}>\r\n            TOP TRACKS\r\n          </Typography>\r\n          {\r\n            (!loaded || !imagesLoaded) && (\r\n              <div className={classes.trackList}>\r\n                <LinearLoader wrapperStyle={{padding: '15px'}} />\r\n              </div>\r\n            )\r\n          }\r\n          {\r\n            loaded && (\r\n              <div className={classes.trackList} style={{visibility: imagesLoaded ? 'visible' : 'hidden'}}>\r\n                <List>\r\n                  {tracks.map((track, i) => {\r\n                    const {\r\n                      name,\r\n                      image,\r\n                      artist: {\r\n                        name: artistName,\r\n                        url: artistUrl,\r\n                      }\r\n                    } = track;\r\n                    const imgSrc = image && image[2] && image[2]['#text'] ? image[2]['#text'] : null;\r\n                    const itemProps = {\r\n                      name,\r\n                      artistName,\r\n                      artistUrl,\r\n                      imgSrc,\r\n                    };\r\n                    return (<TopTrackItem \r\n                      key={i} \r\n                      addImageHandler={addImageHandler} \r\n                      loadImageHandler={loadImageHandler}\r\n                      {...itemProps} />);\r\n                  })}\r\n                </List>\r\n              </div>\r\n            )\r\n          }\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  \r\n  export default withStyles(topTracksStyles)(imageLoadingController(TopTracks));","import { connect } from 'react-redux';\r\nimport {\r\n    getTopTracks,\r\n} from '../actions/topTracks';\r\nimport TopTracks from './TopTracks';\r\n\r\nconst mapStateToProps = state => {\r\n    const {\r\n        topTracks: {\r\n            tracks,\r\n            loaded,\r\n        }\r\n    } = state;\r\n\r\n    return {\r\n        tracks,\r\n        loaded,\r\n    };\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        getTracksHandler: () => {\r\n            dispatch(getTopTracks());\r\n        }\r\n    }\r\n}\r\n\r\nconst TopTracksX = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps,\r\n)(TopTracks);\r\n\r\nexport default TopTracksX;","import React from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport BookmarkIcon from '@material-ui/icons/Bookmark';\r\n\r\nfunction Tags (props) {\r\n    const {\r\n        tags\r\n    } = props;\r\n\r\n    return (\r\n        <div>\r\n            <BookmarkIcon style={{\r\n                display: 'inline-block',\r\n                verticalAlign: 'middle',\r\n                color: '#1D1D1D',\r\n            }} />\r\n            {tags.map((tag) => {\r\n                const {\r\n                    name,\r\n                    url\r\n                } = tag;\r\n\r\n                return (\r\n                    <Button key={name} href={url}>\r\n                        {name}\r\n                    </Button>\r\n                );\r\n            })}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Tags;","\r\nconst artistStyles = theme => ({\r\n    cardWrapper: {\r\n        [theme.breakpoints.down('xs')]: {\r\n            maxWidth: '300px',\r\n            margin: 'auto'\r\n        }\r\n    },\r\n    card: {\r\n        display: 'flex',\r\n        [theme.breakpoints.down('xs')]: {\r\n            flexDirection: 'column',\r\n        }\r\n    },\r\n    media: {\r\n        flex: \"1 0 auto\"\r\n    },\r\n    content: {\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n    },\r\n    cardContentHeader: {\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n        alignItems: 'flex-start',\r\n        marginBottom: '20px',\r\n        [theme.breakpoints.down('xs')]: {\r\n            flexDirection: 'column',\r\n            marginBottom: '15px',\r\n        }\r\n    },\r\n    breadCrumbs: {\r\n        [theme.breakpoints.down('xs')]: {\r\n            order: '0',\r\n            marginBottom: '10px',\r\n        }\r\n    },\r\n    title: {\r\n        [theme.breakpoints.down('xs')]: {\r\n            order: '1',\r\n        }        \r\n    }\r\n});\r\n\r\nexport default artistStyles;","import React, { Component } from 'react';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport LinearLoader from './LinearLoader';\r\nimport MUILink from '@material-ui/core/Link';\r\nimport {Link} from 'react-router-dom';\r\nimport Tags from './Tags';\r\nimport imageLoadingController from './imageLoadingController';\r\nimport artistStyles from '../styles/artistStyles';\r\n\r\nclass Artist extends Component {\r\n    componentDidMount() {\r\n        const {\r\n            getArtistInfoHandler,\r\n            artistUrlName,\r\n            addImageHandler,\r\n        } = this.props;\r\n        getArtistInfoHandler(artistUrlName);\r\n        window.scrollTo(0,0);\r\n        addImageHandler();\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        const {\r\n            clearArtistModule,\r\n        } = this.props;\r\n\r\n        clearArtistModule();\r\n    }\r\n\r\n    renderCard() {\r\n        const {\r\n            artistInfo: {\r\n                name,\r\n                bio: {\r\n                    summary: bioSummary,\r\n                },\r\n                image,\r\n                tags,\r\n            },\r\n            classes,\r\n            loadImageHandler,\r\n            imagesLoaded,\r\n        } = this.props;\r\n\r\n        return (\r\n            <Card className={classes.card} style={{visibility : imagesLoaded ? 'visible' : 'hidden'}}>\r\n                <div className={classes.media}>\r\n                    <img\r\n                        src={image[4]['#text']}\r\n                        style={{width: '300px', height: '300px', display: 'block'}}\r\n                        onLoad={loadImageHandler}\r\n                        alt=\"artistPic\"\r\n                    />\r\n                </div>\r\n                <div className={classes.content}>\r\n                    <CardContent>\r\n                        <div className={classes.cardContentHeader}>\r\n                            <Typography gutterBottom variant=\"h5\" component=\"h2\" className={classes.title}>\r\n                                {name}\r\n                            </Typography>\r\n                            <div className={classes.breadCrumbs}>\r\n                                <MUILink component={Link} to='/'>Home</MUILink>\r\n                                <span dangerouslySetInnerHTML={{ __html: ` &#187 ${name}` }} />\r\n                            </div>\r\n                        </div>\r\n                        <Typography component=\"p\" dangerouslySetInnerHTML={{ __html: bioSummary }} />\r\n                    </CardContent>\r\n                    <CardActions>\r\n                        {tags && tags.tag && <Tags tags={tags.tag} />}\r\n                    </CardActions>\r\n                </div>\r\n            </Card>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            loaded,\r\n            imagesLoaded,\r\n            classes,\r\n        } = this.props;\r\n\r\n      return (\r\n        <div className={classes.cardWrapper}>\r\n            {\r\n                (!loaded || !imagesLoaded) && (\r\n                    <Paper>\r\n                        <LinearLoader wrapperStyle={{padding: '15px'}} />\r\n                    </Paper>               \r\n                )\r\n            }\r\n            {\r\n                loaded && this.renderCard()\r\n            }\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n  \r\n  export default withStyles(artistStyles)(imageLoadingController(Artist));","import { connect } from 'react-redux';\r\nimport {\r\n    getArtistInfo,\r\n    clearArtistModule,\r\n} from '../actions/artist';\r\nimport Artist from './Artist';\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    const {\r\n        artist: {\r\n            artistInfo,\r\n            loaded,\r\n        }\r\n    } = state;\r\n    const {\r\n        name: artistUrlName,\r\n    } = ownProps.match.params;\r\n\r\n    return {\r\n        artistUrlName,\r\n        artistInfo,\r\n        loaded,\r\n    };\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        getArtistInfoHandler: (artist) => {\r\n            dispatch(getArtistInfo(artist));\r\n        },\r\n        clearArtistModule: () => {dispatch(clearArtistModule())}\r\n    }\r\n}\r\n\r\nconst ArtistX = connect(\r\n    mapStateToProps,\r\n    mapDispatchToProps,\r\n)(Artist);\r\n\r\nexport default ArtistX;","import React, { Component } from 'react';\nimport { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport { Provider } from 'react-redux';\nimport logger from 'redux-logger';\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport radioApp from './reducers';\nimport './App.css';\nimport './components/TopTracksX';\nimport TopTracksX from './components/TopTracksX';\nimport ArtistX from './components/ArtistX';\n\nconst store = createStore(\n  radioApp,\n  applyMiddleware(logger, thunk),\n);\n\nclass App extends Component {\n  render() {\n\n    return (\n      <Provider store={store}>\n        <Router>\n          <div className=\"App\">\n            <Route path=\"/\" exact component={TopTracksX} />\n            <Route path=\"/artist/:name\" component={ArtistX} />\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}